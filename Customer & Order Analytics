--Returns the amount of orders placed in January, while filtering out the messy order ID data.
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

--Returns the amount of those above orders that were iPhones.
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE Product='iPhone'
AND length(orderid) = 6
AND orderid <> 'Order ID';

--Returns the customer account numbers for all the orders that were placed in February.
SELECT DISTINCT acctnum
FROM BIT_DB.customers
INNER JOIN FebSales
ON customers.order_id = FebSales.orderid
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

--Returns the cheapest product sold in January and its price.
SELECT product, min(price)
FROM BIT_DB.JanSales;

--Returns total revenue for each product sold in January.
SELECT product, SUM(quantity) * price AS revenue
FROM BIT_DB.JanSales
GROUP BY product;

--Returns which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what the total revenue was.
SELECT product, SUM(quantity), SUM(quantity) * price AS revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

--Returns how many customers ordered more than 2 products at a time in February, and what the average amount spent for those customers was.
SELECT COUNT(distinct cust.acctnum), AVG(quantity*price)
FROM BIT_DB.FebSales AS Feb
LEFT JOIN BIT_DB.customers AS cust
ON FEB.orderid=cust.order_id
WHERE Feb.Quantity>2
AND length(orderid) = 6
AND orderid <> 'Order ID';